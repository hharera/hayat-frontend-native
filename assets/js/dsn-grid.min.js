!(function (t) {
  var e = {};
  function n(i) {
    if (e[i]) return e[i].exports;
    var r = (e[i] = { i: i, l: !1, exports: {} });
    return t[i].call(r.exports, r, r.exports, n), (r.l = !0), r.exports;
  }
  (n.m = t),
    (n.c = e),
    (n.d = function (t, e, i) {
      n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: i });
    }),
    (n.r = function (t) {
      "undefined" != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(t, "__esModule", { value: !0 });
    }),
    (n.t = function (t, e) {
      if ((1 & e && (t = n(t)), 8 & e)) return t;
      if (4 & e && "object" == typeof t && t && t.__esModule) return t;
      var i = Object.create(null);
      if (
        (n.r(i),
        Object.defineProperty(i, "default", { enumerable: !0, value: t }),
        2 & e && "string" != typeof t)
      )
        for (var r in t)
          n.d(
            i,
            r,
            function (e) {
              return t[e];
            }.bind(null, r)
          );
      return i;
    }),
    (n.n = function (t) {
      var e =
        t && t.__esModule
          ? function () {
              return t.default;
            }
          : function () {
              return t;
            };
      return n.d(e, "a", e), e;
    }),
    (n.o = function (t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }),
    (n.p = ""),
    n((n.s = 0));
})([
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(1),
      r = n(9),
      o = n(10),
      s = n(22),
      a = n(11),
      l = n(23),
      c = n(24),
      d = n(25),
      u = n(26),
      f = n(27),
      h = n(28),
      g = n(29);
    gsap.registerPlugin(ScrollTrigger),
      l.default.registerEffect(l.animateNumber),
      (window.dsnGrid = {}),
      (window.$dsnEffect = {
        cursor: { x: 0, y: 0 },
        matchMedia: gsap.matchMedia(),
        swiper: [],
        iso: [],
        kill: [],
      }),
      (window.$wind = jQuery(window)),
      (window.$body = jQuery("body")),
      (window.$scene = []),
      gsap.config({ nullTargetWarn: !1 }),
      gsap.defaults({ duration: 1, overwrite: "auto" }),
      (dsnGrid.effectAnimate = i.default),
      (dsnGrid.getData = r.dataAttr),
      (dsnGrid.spltting = o.default),
      (dsnGrid.loadData = a.default),
      (dsnGrid.isMobile = r.checkMobile),
      (dsnGrid.scrollTop = s.default),
      (dsnGrid.pageLoad = c.default),
      (dsnGrid.mouseMove = d.default),
      (dsnGrid.mouseHover = d.mouseHover),
      (dsnGrid.convertToJQuery = f.default),
      (dsnGrid.WebGLDistortionHoverEffects = u.default),
      (dsnGrid.svgAnimate = Object(h.default)()),
      (dsnGrid.useState = g.default);
  },
  function (t, e, n) {
    "use strict";
    n.r(e),
      n.d(e, "default", function () {
        return p;
      });
    var i = n(2),
      r = n(4),
      o = n(6),
      s = n(8),
      a = n(12),
      l = n(13),
      c = n(14),
      d = n(15),
      u = n(17),
      f = n(18),
      h = n(19),
      g = n(20),
      m = n(21);
    function p() {
      return {
        allInt: function () {
          const t = (async function () {
            await ScrollTrigger.getAll().forEach(function (t) {
              t.kill();
            }),
              await ScrollTrigger.update();
          })();
          jQuery(
            ".use-horizontal-scroll , [data-dsn-animation] , .use-horizontal-scroll-image"
          ).each((e, n) => {
            const i = jQuery(n).parent();
            t.then(() => {
              Object(d.default)(i);
            });
          }),
            t
              .then(i.default)
              .then(r.default)
              .then(o.default)
              .then(s.default)
              .then(a.default)
              .then(l.default)
              .then(u.default)
              .then(f.default)
              .then(h.default)
              .then(m.default)
              .then(() => {
                if (document.querySelector(".gsap-marker-scroller-start")) {
                  const t = gsap.utils.toArray('[class *= "gsap-marker"]');
                  $effectScroll.getListener(
                    ({ offset: e, x: n, y: i }) =>
                      gsap.set(t, { marginTop: -i }),
                    !1
                  );
                }
              });
        },
        parallaxHover: r.default,
        parallaxImg: o.default,
        animateSkills: l.default,
        animateWorkScroll: c.default,
        animateImageScroll: g.default,
        customAnimation: d.default,
        animateFade: f.default,
        nextPage: s.default,
      };
    }
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(3);
    e.default = function () {
      jQuery(".dsn-header-animation").each(function () {
        const t = jQuery(this),
          e = t.find(".dsn-hero-parallax-img"),
          n = t.find("> .link-project"),
          r = t.find(".box-bottom .item , .icon-header"),
          o = t.find(".dsn-hero-parallax-title"),
          s = gsap.timeline({
            scrollTrigger: { trigger: t, start: "top", end: "100%", scrub: !0 },
            defaults: { yoyo: !0, overwrite: "none" },
          });
        e.length && s.to(e, { y: "30%" }, 0),
          n.length && s.from(n, { right: 120 }, 0),
          r.length &&
            gsap.from(r, {
              duration: 0.5,
              y: 20,
              autoAlpha: 0,
              delay: 3,
              stagger: 0.1,
            }),
          o.length && s.to(o, { y: "-10%", autoAlpha: 0 }, 0),
          Object(i.killAjax)(function () {
            var t;
            null === (t = s.scrollTrigger) || void 0 === t || t.kill(),
              s.kill();
          });
      });
    };
  },
  function (t, e, n) {
    "use strict";
    function i(t) {
      "function" == typeof t && $dsnEffect.kill.push(t);
    }
    n.r(e),
      n.d(e, "killAjax", function () {
        return i;
      });
  },
  function (t, e, n) {
    "use strict";
    n.r(e),
      n.d(e, "parallaxIt", function () {
        return o;
      });
    var i = n(5),
      r = n(3);
    function o(t, e, n) {
      const {
          width: i,
          height: r,
          left: o,
          top: s,
        } = e.getBoundingClientRect(),
        a = t.pageX - o,
        l = t.pageY - s,
        c = window.pageYOffset || document.documentElement.scrollTop,
        { speed: d, move: u } = n;
      gsap.to(e, d, {
        x: ((a - i / 2) / i) * u,
        y: ((l - r / 2 - c) / i) * u,
        ease: Power0.easeOut,
      });
    }
    e.default = function (t = jQuery(document), e = {}) {
      if (Object(i.default)(!0)) return;
      const n = Object.assign({}, { speed: 0.5, move: 20 }, e);
      t.find('[data-dsn="parallax"] ').each(function (t, e) {
        const i = document.createElement("div");
        i.classList.add("icon-circle"),
          (i.style.minWidth = "1px"),
          e.appendChild(i),
          e.removeAttribute("data-dsn"),
          e.classList.add("dsn-parallax-hover");
        const s = e.classList.contains("image-zoom"),
          a = e.classList.contains("move-circle"),
          l = function (t) {
            s && gsap.to([e, i], 0.3, { scale: 1.03 });
          },
          c = function (t) {
            gsap.to([e, i], 1, {
              x: 0,
              y: 0,
              scale: 1,
              ease: Back.easeOut.config(4),
            });
          },
          d = function (t) {
            o(t, e, n), a && o(t, i, { ...n, move: 2 * n.move });
          };
        e.addEventListener("mouseenter", l),
          e.addEventListener("mouseleave", c),
          e.addEventListener("mousemove", d),
          Object(r.killAjax)(function () {
            e.removeEventListener("mouseenter", l),
              e.removeEventListener("mouseleave", c),
              e.removeEventListener("mousemove", d);
          });
      });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e),
      (e.default = function (t = !0) {
        let e = !1;
        var n;
        return (
          (n = navigator.userAgent || navigator.vendor || window.opera),
          (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(
            n
          ) ||
            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(
              n.substr(0, 4)
            )) &&
            (e = !0),
          e || (t && window.innerWidth <= 991)
        );
      });
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(7),
      r = n(3);
    e.default = function (t = jQuery(document)) {
      t.find(
        '[data-dsn-grid="move-up"] , .box-image-parallax .box-image-bg'
      ).each(function (t, e) {
        const n = e.querySelector("img:not(.hidden) , video"),
          o = Object(i.default)(e, "triggerhook") || "bottom";
        if ((e.setAttribute("data-dsn-grid", "moveUp"), !n)) return;
        const s = { active: null, img: null },
          a = Object(i.default)(n, "speed") || "30%",
          l = n.classList.contains("has-opposite-direction"),
          c = {
            scale: 1,
            y: l ? "-=" + a : "+=" + a,
            force3D: !0,
            ease: "none",
          };
        let d,
          u = null;
        "bottom" === o
          ? ((u = "+=" + a), (d = "-=" + a))
          : "center" === o
          ? ((u = "+=" + a.replace(/\D/g, "") / 2 + "%"),
            (d = "-=" + a.replace(/\D/g, "") / 2 + "%"))
          : (d = 0),
          gsap.set(n, { height: u, y: l ? 0 : d }, 0),
          e.classList.contains("dsn-animate") &&
            (s.active = ScrollTrigger.create({
              trigger: e,
              start: "top bottom",
              onEnter: (t) => e.classList.add("dsn-active"),
            })),
          n.classList.contains("has-scale") && (c.scale = 1.1),
          (s.img = gsap.to(n, {
            ...c,
            scrollTrigger: { trigger: e, start: "top " + o, scrub: !0 },
          })),
          Object(r.killAjax)(function () {
            var t, e, n;
            null === (t = s.img) || void 0 === t || t.scrollTrigger.kill(),
              null === (e = s.img) || void 0 === e || e.kill(),
              null === (n = s.active) || void 0 === n || n.kill();
          });
      });
    };
  },
  function (t, e, n) {
    "use strict";
    function i(t, e) {
      t && t.removeAttribute("data-dsn-" + e);
    }
    n.r(e),
      n.d(e, "removeAttr", function () {
        return i;
      }),
      (e.default = function (t, e, n = !1) {
        if ((t instanceof jQuery && (t = t.get(0)), !t)) return;
        const r = t.getAttribute("data-dsn-" + e);
        i(t, e);
        try {
          return JSON.parse(r);
        } catch (t) {
          return r || n;
        }
      });
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(3),
      r = n(9);
    e.default = function () {
      jQuery(".next-project").each(function () {
        const t = this.querySelector(".bg-container"),
          e = this.querySelector(".dsn-container"),
          n = this.querySelector(".dsn-separator .path-anim"),
          o = gsap.timeline({
            scrollTrigger: { trigger: this, scrub: !0, end: "top" },
            defaults: { ease: "none" },
          });
        n && o.to(n, { attr: { d: Object(r.dataAttr)(n, "to") } }, 0),
          t &&
            o.fromTo(
              t,
              { yPercent: -70, scale: 1.2 },
              { yPercent: 0, scale: 1 },
              0
            ),
          e && o.from(e, { yPercent: -100, y: "30%", autoAlpha: 0 }, 0),
          Object(i.killAjax)(function () {
            var t;
            null === (t = o.scrollTrigger) || void 0 === t || t.kill(),
              o.kill();
          });
      });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(5);
    n.d(e, "checkMobile", function () {
      return i.default;
    });
    var r = n(7);
    n.d(e, "dataAttr", function () {
      return r.default;
    });
    var o = n(10);
    n.d(e, "dsnSplitting", function () {
      return o.default;
    });
    var s = n(11);
    n.d(e, "loadLazyImage", function () {
      return s.default;
    });
  },
  function (t, e, n) {
    "use strict";
    function i(t, e) {
      const n = t.querySelectorAll(".whitespace");
      n.length && e && n.forEach((t) => (t.outerHTML = " "));
    }
    n.r(e),
      n.d(e, "splittingChar", function () {
        return r;
      }),
      n.d(e, "splittingWords", function () {
        return o;
      }),
      n.d(e, "splittingLine", function () {
        return s;
      }),
      n.d(e, "splittingItems", function () {
        return a;
      }),
      n.d(e, "splittingGrid", function () {
        return l;
      });
    const r = (t, e = !0) => {
        if (!t) return;
        const n = Splitting({ target: t, whitespace: !1 })[0];
        return i(t, e), n;
      },
      o = (t, e = !0) => {
        if (!t) return;
        const n = Splitting({ target: t, by: "words" })[0];
        return i(t, e), n;
      },
      s = (t, e = !0) => {
        if (!t) return;
        const n = Splitting({ target: t, by: "lines" })[0];
        return i(t, e), n;
      },
      a = (t, e = null) => {
        if (t) return Splitting({ target: t, by: "items", matching: e });
      },
      l = (t, e = null) => {
        if (t) return Splitting({ target: t, by: "grid", matching: e });
      },
      c = { Char: r, Words: o, Lines: s, Items: a, Grid: l };
    e.default = c;
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(7);
    e.default = function (t, e, n = {}) {
      if (!t) return;
      const r = Object(i.default)(t, "srcset"),
        o = new Image(),
        { onComplete: s } = n;
      t.classList.add("dsn-lazy-loading"),
        (o.src = t.getAttribute("data-dsn-" + e)),
        r && (o.srcset = r),
        (o.onload = function () {
          switch ((Object(i.removeAttr)(t, e), e)) {
            case "bg":
              t.style.backgroundImage = "url(" + this.src + ")";
              break;
            case "src":
              t.setAttribute("src", this.src),
                t.setAttribute("srcset", this.srcset);
              break;
            default:
              t.setAttribute(e, Object(i.default)(t, e));
          }
          t.classList.remove("dsn-lazy-loading"),
            this.remove(),
            "function" == typeof s && s(t);
        });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(9);
    e.default = function (t = jQuery(document)) {
      t.find(".dsn-animate-number").each(function () {
        const t = jQuery(this);
        t.html(
          (function (t) {
            const e = t.match(/\d+/g);
            return (
              e.forEach(function (n, i) {
                t = t.replace(
                  e[i],
                  '<span class="animate-number" data-dsn-number="::' +
                    (i + 1) +
                    '">0</span>'
                );
              }),
              e.forEach(function (e, n) {
                t = t.replace("::" + (n + 1), e);
              }),
              t
            );
          })(t.html())
        ),
          t.find("[data-dsn-number]").each(function () {
            gsap.effects.animateNumber(this, {
              textContent: Object(i.dataAttr)(this, "number") || 0,
              onComplete: function () {
                this.vars.scrollTrigger.scrub ||
                  (this.scrollTrigger.kill(), this.kill());
              },
            });
          });
      });
    };
  },
  function (t, e, n) {
    "use strict";
    function i() {
      const t = this.querySelectorAll(".bar-svg .dsn-animate-skill");
      t &&
        gsap.from(t, 1.5, {
          strokeDashoffset: "100",
          stagger: 0.2,
          ease: Linear.easeNone,
          scrollTrigger: { trigger: this, start: "top 95%" },
          onUpdate: function () {
            this._targets.forEach(function (t) {
              t.closest(".bar-svg").querySelector(".number").innerText =
                100 - t.style.strokeDashoffset.match(/\d+/)[0] + "%";
            });
          },
          onComplete: function () {
            this.vars.scrollTrigger.scrub ||
              (this.scrollTrigger.kill(), this.kill());
          },
        });
    }
    function r() {
      const t = this.querySelectorAll(".bar-progress .dsn-animate-skill");
      t &&
        gsap.from(t, {
          width: "0%",
          stagger: 0.2,
          scrollTrigger: { trigger: this, start: "top 95%" },
          onUpdate: function () {
            this._targets.forEach(function (t) {
              t.querySelector(".number").innerText =
                (
                  (t.offsetWidth / t.closest(".bar-progress").offsetWidth) *
                  100
                ).toFixed(0) + "%";
            });
          },
          onComplete: function () {
            this.vars.scrollTrigger.scrub ||
              (this.scrollTrigger.kill(), this.kill());
          },
        });
    }
    n.r(e),
      (e.default = function (t = jQuery(document)) {
        t.find(".dsn-skills").each(function () {
          i.bind(this)(), r.bind(this)();
        });
      });
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(9),
      r = n(3),
      o = n(5);
    e.default = function (t = jQuery(document)) {
      Object(o.default)() ||
        t.find(".use-horizontal-scroll").each(function () {
          this.classList.remove("use-horizontal-scroll"),
            (this.style.flexWrap = "nowrap");
          const { speed: t = 0, start: e = 0 } =
              Object(i.dataAttr)(this, "option") || {},
            n = gsap.timeline({
              scrollTrigger: {
                trigger: this,
                invalidateOnRefresh: !0,
                pin: !0,
                scrub: 1,
                anticipatePin: 2,
                end: () => "+=" + (this.offsetWidth + 100 * t),
                start: e + "",
              },
            }),
            o = this.querySelector(".start-section .dsn-animate-up"),
            s = this.querySelector(".start-section .dsn-animate-down"),
            a = this.querySelector(".end-section .dsn-animate-up"),
            l = this.querySelector(".end-section .dsn-animate-down"),
            c = this.querySelectorAll(".box-content > .post-title"),
            d = gsap.timeline({
              scrollTrigger: {
                trigger: l,
                containerAnimation: n,
                start: "0% 70%",
                end: "0% 30%",
                scrub: !0,
              },
            });
          n.to(this, { x: -(this.scrollWidth - $wind.width()), ease: "none" }),
            n.to(c, { paddingLeft: 15 }, 0),
            o && n.to(o, { y: -150, opacity: 0 }, 0),
            s && n.to(s, { y: 150, opacity: 0 }, 0),
            l && d.from(l, { y: 150, opacity: 0, ease: "none" }, 0),
            l && d.from(a, { y: -150, opacity: 0, ease: "none" }, 0),
            Object(r.killAjax)(function () {
              n.scrollTrigger.kill(),
                n.kill(),
                d.scrollTrigger.kill(),
                d.kill();
            });
        });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(9),
      r = (n(3), n(16));
    function o(t) {
      for (const e in t) delete t[e];
    }
    e.default = function (t = jQuery(document)) {
      t.find("[data-dsn-animation]").each(function () {
        const {
            from: t = {},
            from_tablet: e = {},
            from_mobile: n = {},
            to: s = {},
            to_tablet: a = {},
            to_mobile: l = {},
            option: c = {},
            responsive: d = [],
          } = Object(i.dataAttr)(this, "animation") || {},
          u = Object.keys(t).length,
          f = Object.keys(s).length,
          { pin: h, scrub: g, start: m, end: p, trigger: v, markers: b } = c,
          y = jQuery.extend(!1, t, e),
          w = jQuery.extend(!1, s, a),
          x = jQuery.extend(!1, y, n),
          k = jQuery.extend(!1, w, l);
        d.includes("desktop") || (o(t), o(s)),
          d.includes("tablet") || (o(e), o(a)),
          d.includes("mobile") || (o(n), o(l));
        const j = {
          trigger: v || (h ? jQuery(this).parents(".elementor-section") : this),
          invalidateOnRefresh: !0,
          scrub: g,
          anticipatePin: 1,
          pin: h,
          markers: b,
          start: "top " + m,
          end: "bottom " + p.replace("{{height}}", this.offsetHeight),
        };
        Object(r.default)((e) => {
          const { isDesktop: n, isTablet: i, isMobile: r } = e.conditions,
            o = $body.hasClass("elementor-editor-active")
              ? jQuery(this).parents('[data-element_type="widget"]')
              : this,
            a = n ? t : i ? y : x,
            l = n ? s : i ? w : k,
            c = gsap.timeline({ defaults: { ease: "none" } });
          let h;
          return (
            l.repeat ||
              (((n && d.includes("desktop")) ||
                (i && d.includes("tablet")) ||
                (r && d.includes("mobile"))) &&
                (h = ScrollTrigger.create({ animation: c, ...j }))),
            u && f ? c.fromTo(o, a, l) : u ? c.from(o, a) : f && c.to(o, l),
            () => {
              var t;
              null === (t = h) || void 0 === t || t.kill(), c.kill();
            }
          );
        });
      });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e),
      (e.default = function (t, e = null, n = null) {
        return (
          "object" == typeof t
            ? $dsnEffect.matchMedia.add(t, e, n)
            : $dsnEffect.matchMedia.add(
                {
                  isDesktop: "(min-width: 992px)",
                  isTablet: "(min-width: 768px) and (max-width: 991px)",
                  isMobile: "(max-width: 767px)",
                },
                t,
                e
              ),
          $dsnEffect.matchMedia
        );
      });
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(3),
      r = n(9);
    e.default = function () {
      jQuery(".footer-animate:not(.next-project)").each(function () {
        const t = this.querySelector(".dsn-separator .path-anim"),
          e = gsap.timeline({
            scrollTrigger: {
              trigger: this,
              end: "top 100%-=" + this.offsetHeight,
              scrub: !0,
            },
          });
        t &&
          e.to(
            t,
            { attr: { d: Object(r.dataAttr)(t, "to") }, overwrite: "none" },
            0
          ),
          e.fromTo(
            this.querySelector(".footer-content"),
            { yPercent: -70 },
            { yPercent: 0, overwrite: "none" },
            0
          ),
          Object(i.killAjax)(function () {
            var t;
            null === (t = e.scrollTrigger) || void 0 === t || t.kill(),
              e.kill();
          });
      });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(3);
    const r = function (t) {
      if (!t.length) return;
      t.removeClass("dsn-up");
      const e = gsap
        .from(t, {
          willChange: "transform , opacity",
          duration: 0.8,
          y: 20,
          autoAlpha: 0,
          ease: Back.easeOut.config(1.7),
          stagger: 0.2,
          scrollTrigger: { trigger: this, start: "top 75%" },
        })
        .eventCallback("onComplete", function () {
          var t;
          null === (t = e.scrollTrigger) || void 0 === t || t.kill(),
            null == e || e.kill();
        });
      Object(i.killAjax)(function () {
        var t;
        null === (t = e.scrollTrigger) || void 0 === t || t.kill(),
          null == e || e.kill();
      });
    };
    e.default = function (t = jQuery(document)) {
      t.find(".dsn-layout-fade-up").each(function () {
        const t = jQuery(this).find(".dsn-up");
        this.classList.remove("dsn-layout-fade-up"), r.bind(this)(t);
      }),
        t.find(".dsn-up").each(function () {
          r.bind(this)(jQuery(this));
        });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(3),
      r = n(9);
    e.default = function (t = jQuery(document)) {
      t.find(".dsn-text").each(function () {
        const t = r.dsnSplitting.Words(this);
        if (!t) return;
        const e = gsap
          .from(t.words, {
            willChange: "transform , opacity",
            transformOrigin: "top left",
            duration: 0.8,
            y: 30,
            rotation: 15,
            scale: 0.8,
            opacity: 0,
            ease: Back.easeOut.config(2),
            stagger: 0.08,
            scrollTrigger: { trigger: this, start: "top 75%" },
          })
          .eventCallback("onComplete", function () {
            var t;
            null === (t = e.scrollTrigger) || void 0 === t || t.kill(),
              null == e || e.kill();
          });
        Object(i.killAjax)(function () {
          var t;
          null === (t = e.scrollTrigger) || void 0 === t || t.kill(),
            null == e || e.kill();
        });
      });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(9),
      r = n(3);
    e.default = function (t = jQuery(document)) {
      t.find(".use-horizontal-scroll-image").each(function () {
        this.classList.remove("use-horizontal-scroll-image"),
          (this.style.flexWrap = "nowrap");
        const {
            pin: t,
            speed: e = 1,
            start: n = "100%",
            end: o = "0%",
          } = Object(i.dataAttr)(this, "option") || {},
          s = gsap.timeline({
            scrollTrigger: {
              trigger: this,
              invalidateOnRefresh: !0,
              pin: t,
              scrub: e,
              start: "top " + n,
              end: "bottom " + o,
            },
          });
        this.classList.contains("move-left")
          ? s.to(this, { x: -(this.scrollWidth - $wind.width()), ease: "none" })
          : s.fromTo(
              this,
              { x: -(this.scrollWidth - $wind.width()) },
              { ease: "none", x: 0 }
            ),
          Object(r.killAjax)(function () {
            s.scrollTrigger.kill(), s.kill();
          });
      });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(3),
      r = n(16);
    e.default = function (t = jQuery(document)) {
      t.find(
        ".dsn-style-metro.dsn-metro-1:not(.dsn-metro-content-moved,.elementor-widget-dsn_posts_slider)"
      ).each(function () {
        this.classList.add("dsn-metro-content-moved");
        const t = ".dsn-item-post .box-content",
          e = jQuery(this).find(t);
        e.find(".post-content").css({ pointerEvents: "none" }),
          e.find(".post-title").css({ wordBreak: "keep-all" }),
          Object(r.default)((n) => {
            const { isTablet: i, isMobile: r } = n.conditions;
            if (r || i) return;
            let o = {};
            return (
              e.on("mousemove", function (t) {
                const { offsetX: n, offsetY: i } = t,
                  r = this.querySelector(".post-content");
                r &&
                  (o[e.index(this)] ||
                    (o[e.index(this)] = jQuery(r).css(["left", "top"])),
                  0 ===
                  gsap.utils.snap(
                    {
                      values: [0, 2 * this.offsetWidth],
                      radius: this.offsetWidth - r.offsetWidth,
                    },
                    n
                  )
                    ? gsap.set(r, { left: n, top: i, right: "auto" })
                    : gsap.set(r, {
                        left: this.offsetWidth - r.offsetWidth - 10,
                        top: i,
                        right: "auto",
                      }));
              }),
              e.on("mouseleave", function (n) {
                const i = this.querySelector(".post-content");
                i &&
                  (gsap.to(i, 0.8, o[e.index(this)]),
                  jQuery(this)
                    .find(t + " .post-content")
                    .css({ pointerEvents: "" }));
              }),
              () => {
                e.off("mousemove");
              }
            );
          }),
          Object(i.killAjax)(function () {
            e.off("mousemove");
          });
      });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e),
      (e.default = function (t, e = {}) {
        var n, i;
        let r = 0;
        if (
          ("end" === t
            ? (r = document.body.scrollHeight)
            : "number" == typeof t
            ? (r = t)
            : t && (r = null == t ? void 0 : t.offsetTop),
          null == r)
        )
          return;
        const o = (e = Object.assign({ offset: -100 }, e)).offset || -100;
        delete e.offset,
          gsap.to(
            (null === (n = window) ||
            void 0 === n ||
            null === (i = n.Scrollbar) ||
            void 0 === i
              ? void 0
              : i.get(document.querySelector("#dsn-scrollbar"))) || $wind,
            { scrollTo: { y: r + (o || 0) }, ...e }
          );
      });
  },
  function (t, e, n) {
    "use strict";
    n.r(e),
      n.d(e, "moveSection", function () {
        return r;
      }),
      n.d(e, "fade", function () {
        return o;
      }),
      n.d(e, "textAnimation", function () {
        return s;
      }),
      n.d(e, "animateNumber", function () {
        return a;
      });
    var i = n(9);
    function r() {
      gsap.registerEffect({
        name: "moveSection",
        extendTimeline: !0,
        defaults: {
          from: { y: -10 },
          to: { y: 200 },
          ease: "none",
          start: "100%",
          end: "0%",
          scrub: !0,
          markers: !1,
        },
        effect: (t, e) =>
          gsap.fromTo(t, e.from, {
            ease: e.ease,
            ...e.to,
            scrollTrigger: {
              trigger: t,
              scrub: e.scrub,
              start: "top " + e.start,
              end: e.end + " 0%",
              markers: e.markers,
            },
          }),
      });
    }
    function o() {
      gsap.registerEffect({
        name: "fade",
        extendTimeline: !0,
        defaults: {
          from: { opacity: 0 },
          to: { opacity: 1 },
          ease: Back.easeOut.config(1.7),
          start: "75%",
          end: "100%",
          scrub: !1,
          markers: !1,
          duration: 0.8,
        },
        effect: (t, e) =>
          gsap.fromTo(t, e.from, {
            ...e.to,
            willChange: "transform , opacity",
            scrollTrigger: {
              trigger: t,
              scrub: e.scrub,
              start: "top " + e.start,
              end: e.end + " 0%",
              markers: e.markers,
            },
          }),
      });
    }
    function s() {
      gsap.registerEffect({
        name: "textAnimation",
        extendTimeline: !0,
        defaults: {
          from: {},
          to: {},
          ease: Back.easeOut.config(2),
          start: "75%",
          end: "100%",
          scrub: !1,
          markers: !1,
          duration: 0.8,
        },
        effect: (t, e) =>
          gsap.fromTo(i.dsnSplitting.Words(t[0]).words, e.from, {
            ...e.to,
            willChange: "transform , opacity",
            transformOrigin: "top left",
            ease: e.ease,
            duration: e.duration,
            scrollTrigger: {
              trigger: t,
              scrub: e.scrub,
              start: "top " + e.start,
              end: e.end + " 0%",
              markers: e.markers,
            },
          }),
      });
    }
    function a() {
      gsap.registerEffect({
        name: "animateNumber",
        extendTimeline: !0,
        defaults: {
          ease: Back.easeOut.config(2),
          scrollTrigger: {
            start: "top 98%",
            end: "top 0%",
            scrub: !1,
            markers: !1,
          },
          duration: 4,
          textContent: 0,
        },
        effect: (t, e) =>
          gsap.to(t, {
            snap: { textContent: 1 },
            ...e,
            textContent: e.textContent,
            duration: e.duration,
            ease: e.ease,
            scrollTrigger: { trigger: t, ...e.scrollTrigger },
          }),
      });
    }
    e.default = {
      registerEffect: (...t) => {
        t &&
          t.forEach((t) => {
            "function" == typeof t && t();
          });
      },
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e),
      (e.default = function ({
        startTime: t,
        endTime: e,
        duration: n,
        onProgress: i,
      }) {
        const r = window.performance.timing,
          o = (((-1 * (r.loadEventEnd - r.navigationStart)) / 1e3) % 50) * 10;
        let s = t,
          a = e > t ? 1 : -1,
          l = Math.abs(Math.floor((o + n) / 100));
        const c = setInterval(function () {
          (s += a), i(s), s >= e && clearInterval(c);
        }, l);
        return c;
      });
  },
  function (t, e, n) {
    "use strict";
    n.r(e),
      n.d(e, "mouseHover", function () {
        return r;
      });
    var i = n(3);
    function r(t, e) {
      e.enter && jQuery(t).on("mouseenter", e.enter),
        e.leave && jQuery(t).on("mouseleave", e.leave),
        Object(i.killAjax)(() => {
          e.enter && jQuery(t).off("mouseenter", e.enter),
            e.leave && jQuery(t).off("mouseleave", e.leave);
        });
    }
    e.default = function (t, e) {
      const {
          speed: n = 0.35,
          inner: i = {},
          ease: r = "power2.out",
          mouseStop: o,
        } = e,
        { el: s, speed: a = 0.25 } = i;
      gsap.set([t, s], { xPercent: -50, yPercent: -50 }),
        window.addEventListener("mousemove", (e) => {
          $body.hasClass(o)
            ? (window.$dsnEffect.cursor = { x: e.x, y: e.y })
            : (gsap.to(t, { x: e.x, y: e.y, duration: n, ease: r }),
              gsap.to(s, { x: e.x, y: e.y, duration: a, ease: r }));
        });
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e);
    var i = n(27);
    function r(t) {
      let e = 0,
        n = !1;
      t.swiper.on("progress", (i) => {
        if (!n) return;
        e < i.progress
          ? (this.mat.uniforms.effectFactor.value = t.intensity)
          : e > i.progress &&
            (this.mat.uniforms.effectFactor.value = -1 * t.intensity);
        const r = i.slides[i.activeIndex].progress,
          o = 1 - Math.min(Math.abs(r), 1);
        gsap.set(this.mat.uniforms.dispFactor, { value: o, ease: "none" }),
          this.animate();
      }),
        t.swiper.on("touchStart", (t) => {
          (n = !0), (e = t.progress);
        }),
        t.swiper.on("touchEnd", () => {
          (n = !1),
            gsap.to(this.mat.uniforms.dispFactor, t.speedIn, {
              value: 1,
              ease: t.easing,
              onUpdate: () => {
                this.animate(),
                  void 0 !== t.onUpdate && t.onUpdate.bind(this)();
              },
            });
        });
    }
    const o = function (t) {
      const e = t.parent || console.warn("no parent"),
        n = t.displacement || console.warn("displacement image missing"),
        o = this,
        s = Object(i.default)(t.nextEl),
        a = Object(i.default)(t.prevEl);
      var l,
        c = [],
        d = !1,
        u = 0,
        f = 0;
      e.classList.add("three-js-loader", "bg-three-js"),
        (t = jQuery.extend(
          !0,
          {
            imgs: [],
            intensity: 1,
            speedIn: 1.6,
            speedOut: 1.2,
            hover: !1,
            easing: Expo.easeOut,
          },
          t
        ));
      const { imgs: h } = t;
      (this.scene = new THREE.Scene()),
        (this.width = window.innerWidth),
        (this.height = window.innerHeight),
        t.swiper &&
          (r.bind(this)(t),
          (t.swiper.dsnOnChange = (t, e) => {
            this.changeTo(t, e);
          }));
      const g = (t, e, n) => {
          let i = new THREE.VideoTexture(t);
          (i.magFilter = THREE.LinearFilter),
            (i.minFilter = THREE.LinearFilter),
            (i.anisotropy = this.renderer.capabilities.getMaxAnisotropy()),
            (i.dsn_video = jQuery("<img src='" + e + "' />").get(0)),
            (c[n] = i);
        },
        m = (t, e) => {
          const n = this.loader.load(t);
          (n.magFilter = THREE.LinearFilter),
            (n.minFilter = THREE.LinearFilter),
            (n.anisotropy = this.renderer.capabilities.getMaxAnisotropy()),
            (c[e] = n);
        };
      (async () => (
        (this.ratio = window.devicePixelRatio),
        (this.video = !1),
        new THREE.WebGLRenderer({
          canvas: this.canvas,
          powerPreference: "high-performance",
          antialias: !1,
          alpha: !0,
        })
      ))()
        .then(
          (t) => (
            (this.renderer = t),
            this.renderer.setPixelRatio(window.devicePixelRatio),
            this.renderer.setClearColor(16777215, 0),
            this.renderer.setSize(this.width, this.height),
            (this.width = e.offsetWidth),
            (this.height = e.offsetHeight),
            e.appendChild(this.renderer.domElement),
            this.renderer
          )
        )
        .then(() => {
          (this.camera = new THREE.PerspectiveCamera(
            70,
            window.innerWidth / window.innerHeight,
            0.001,
            1e3
          )),
            this.camera.position.set(0, 0, 2);
        })
        .then(() => {
          this.manager = new THREE.LoadingManager();
        })
        .then(() => {
          (this.loader = new THREE.TextureLoader(this.manager)),
            ((l = this.loader.load(n)).wrapS = l.wrapT = THREE.RepeatWrapping),
            t.imgs.forEach(({ src: t, poster: e = !1 }, n) => {
              e ? g(t, e, n) : m(t, n);
            });
        })
        .then(() => {
          this.mat = new THREE.ShaderMaterial({
            extensions: {
              derivatives: "#extension GL_OES_standard_derivatives : enable",
            },
            side: THREE.DoubleSide,
            uniforms: {
              effectFactor: { type: "f", value: t.intensity },
              dispFactor: { type: "f", value: 0 },
              texture: { type: "t", value: c[0] },
              texture2: { type: "t", value: c[0] },
              disp: { type: "t", value: l },
              resolution: { type: "v4", value: new THREE.Vector4() },
            },
            vertexShader:
              "\n\t\t\tvarying vec2 vUv;\n\t\t\tvoid main() {\n\t\t\t\tvUv = uv;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t}",
            fragmentShader: v(),
            transparent: !0,
            opacity: 1,
          });
        })
        .then(() => {
          (this.geometry = new THREE.PlaneGeometry(1, 1, 2, 2)),
            (this.plane = new THREE.Mesh(this.geometry, this.mat));
        })
        .then(() => {
          this.scene.add(this.plane);
        })
        .then(() => {
          this.animate = function () {
            this.video ||
              this.destroyed ||
              this.renderer.render(this.scene, this.camera);
          };
          this.manager.onLoad = () => {
            jQuery(e).removeClass("three-js-loader"),
              !0,
              this.destroyed
                ? this.destroy()
                : (p(),
                  window.addEventListener("resize", p),
                  t.onComplete && t.onComplete.bind(this)());
          };
        })
        .then(() => {
          s.length &&
            s.on("click", function () {
              o.next();
            }),
            a.length &&
              a.on("click", function () {
                o.prev();
              });
        });
      const p = () => {
        let t,
          n,
          i = c[f].image;
        c[f].dsn_video
          ? ((i = c[f].dsn_video), (this.video = !0))
          : (this.video = !1),
          (this.width = e.offsetWidth),
          (this.height = e.offsetHeight),
          this.renderer.setSize(this.width, this.height),
          (this.camera.aspect = this.width / this.height),
          (this.imageAspect = i.height / i.width),
          this.height / this.width > this.imageAspect
            ? ((t = (this.width / this.height) * this.imageAspect), (n = 1))
            : ((t = 1), (n = this.height / this.width / this.imageAspect));
        const r = this.camera.position.z;
        (this.camera.fov = (180 / Math.PI) * 2 * Math.atan(1 / (2 * r))),
          (this.plane.scale.x = this.camera.aspect),
          (this.plane.scale.y = 1),
          gsap.to(this.mat.uniforms.resolution.value, 0.1, {
            x: this.width,
            y: this.height,
            z: t,
            w: n,
            yoyo: !0,
            onUpdate: function () {
              this.camera.updateProjectionMatrix(), this.animate();
            }.bind(this),
            ease: "none",
          });
      };
      function v() {
        let e = "";
        return (
          (e =
            "horizontal" !== t.direction
              ? "vec2 distortedPosition = vec2(uv.x, uv.y - dispFactor * (disp.r*effectFactor));\n\t\t\t\t\tvec2 distortedPosition2 = vec2(uv.x, uv.y + (1.0 - dispFactor) * (disp.r*effectFactor));"
              : " vec2 distortedPosition = vec2(uv.x + dispFactor * (disp.r*effectFactor), uv.y);\n            vec2 distortedPosition2 = vec2(uv.x - (1.0 - dispFactor) * (disp.r*effectFactor), uv.y);\n\n            "),
          `\n        varying vec2 vUv;\n\n        uniform sampler2D texture;\n        uniform sampler2D texture2;\n        uniform sampler2D disp;\n\n        uniform float dispFactor;\n        uniform float effectFactor;\n\t\tuniform vec4 resolution;\n\n\n\n        void main() {\n\n            vec2 uv = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\n            \n\n            vec4 disp = texture2D(disp, uv);\n\n            ${e}\n\n            vec4 _texture = texture2D(texture, distortedPosition);\n            vec4 _texture2 = texture2D(texture2, distortedPosition2);\n\n            vec4 finalTexture = mix(_texture, _texture2, dispFactor);\n\n            gl_FragColor = finalTexture;\n\n        }\n    `
        );
      }
      function b(n, i) {
        (d = !0),
          void 0 !== t.onStart &&
            t.onStart.bind(this)({
              parent: e,
              item: h[n],
              activeIndex: n,
              oldIndex: i,
            }),
          p();
      }
      function y() {
        this.animate(), void 0 !== t.onUpdate && t.onUpdate.bind(this)();
      }
      function w() {
        (d = !1), void 0 !== t.onEnd && t.onEnd.bind(this)(c[f], f, u);
      }
      (this.destroy = () => {
        (this.destroyed = !0),
          window.removeEventListener("resize", p),
          this.renderer.forceContextLoss(),
          this.renderer.dispose(),
          (this.renderer = null),
          (this.manager = null),
          (this.video = null),
          this.geometry.dispose(),
          (this.geometry = null),
          this.mat.dispose(),
          (this.mat = null),
          (this.plane = null),
          (this.loader = null),
          (this.ratio = null),
          this.scene.dispose(),
          (this.scene = null),
          (this.width = this.height = this.changeTo = this.next = this.prev),
          (this.imageAspect = null);
      }),
        (this.next = function () {
          void 0 === this.renderer ||
            d ||
            ((this.mat.uniforms.effectFactor.value = t.intensity),
            (u = f),
            (f = (f + 1) % c.length),
            this.changeTo(f));
        }),
        (this.prev = function () {
          void 0 === this.renderer ||
            d ||
            ((this.mat.uniforms.effectFactor.value = -1 * t.intensity),
            (u = f),
            (f = 0 === f ? c.length - 1 : Math.abs((f - 1) % c.length)),
            this.changeTo(f));
        }),
        (this.changeTo = function (e, n) {
          (f = e),
            (u = n),
            (this.mat.uniforms.effectFactor.value =
              e > n ? -1 * t.intensity : t.intensity),
            (this.mat.uniforms.texture.value = c[u]),
            (this.mat.uniforms.texture2.value = c[e]),
            gsap.fromTo(
              this.mat.uniforms.dispFactor,
              t.speedIn,
              { value: 0 },
              {
                value: 1,
                ease: t.easing,
                onStart: b.bind(this, f, u),
                onUpdate: y.bind(this, f, u),
                onComplete: w.bind(this, f, u),
              }
            );
        });
    };
    e.default = function (t) {
      return !(t.parent && !t.imgs.length) && new o(t);
    };
  },
  function (t, e, n) {
    "use strict";
    n.r(e),
      (e.default = function (t) {
        return t instanceof jQuery == !1 ? jQuery(t) : t;
      });
  },
  function (t, e, n) {
    "use strict";
    function i(t, e) {
      return gsap
        .timeline()
        .addLabel("top")
        .set(t, { attr: { d: "M 0 100 V 100 Q 50 100 100 100 V 100 z" } }, 0)
        .to(
          t,
          {
            duration: 0.8,
            ease: "power4.in",
            attr: { d: "M 0 100 V 50 Q 50 0 100 50 V 100 z" },
          },
          0
        )
        .to(t, {
          duration: 0.3,
          ease: "power2",
          attr: { d: "M 0 100 V 0 Q 50 0 100 0 V 100 z" },
          onComplete: e,
        })
        .addLabel("center")
        .set(t, { attr: { d: "M 0 0 V 100 Q 50 100 100 100 V 0 z" } })
        .to(t, {
          duration: 0.3,
          ease: "power2.in",
          attr: { d: "M 0 0 V 50 Q 50 0 100 50 V 0 z" },
        })
        .to(t, {
          duration: 0.8,
          ease: "power4",
          attr: { d: "M 0 0 V 0 Q 50 0 100 0 V 0 z" },
        });
    }
    function r(t, e) {
      return gsap
        .timeline()
        .addLabel("top")
        .set(t, { attr: { d: "M 0 0 V 0 Q 50 0 100 0 V 0 z" } }, 0)
        .to(
          t,
          {
            duration: 0.8,
            ease: "power4.in",
            attr: { d: "M 0 0 V 50 Q 50 100 100 50 V 0 z" },
          },
          0
        )
        .to(t, {
          duration: 0.3,
          ease: "power2",
          attr: { d: "M 0 0 V 100 Q 50 100 100 100 V 0 z" },
          onComplete: e,
        })
        .addLabel("center")
        .set(t, { attr: { d: "M 0 100 V 0 Q 50 0 100 0 V 100 z" } })
        .to(t, {
          duration: 0.3,
          ease: "power2.in",
          attr: { d: "M 0 100 V 50 Q 50 100 100 50 V 100 z" },
        })
        .to(t, {
          duration: 0.8,
          ease: "power4",
          attr: { d: "M 0 100 V 100 Q 50 100 100 100 V 100 z" },
        });
    }
    n.r(e),
      n.d(e, "animationUp", function () {
        return i;
      }),
      n.d(e, "animationDown", function () {
        return r;
      }),
      (e.default = function () {
        return { up: i, down: r };
      });
  },
  function (t, e, n) {
    "use strict";
    n.r(e),
      (e.default = function (t = null, e = null) {
        return new (function () {
          const n = { current: t };
          (this.setValue = function (t) {
            "function" == typeof this.onChange &&
              this.onChange.bind(this)(t, n.current),
              (n.current = t);
          }.bind(this)),
            (this.getValue = function () {
              return n.current;
            }),
            (this.onChange = e);
        })(t);
      });
  },
]);
//# sourceMappingURL=dsn-grid.min.js.map
